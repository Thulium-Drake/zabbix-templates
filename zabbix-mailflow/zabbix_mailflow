#!/bin/bash
#
# Zabbix agent extension for monitoring SMTP flows

BUFFER=/tmp/zabbix-mailflow
CFG=/home/jp76350/git/zabbix-templates-jeff/zabbix-mailflow/zabbix-mailflow.conf
SOFTWARE="sed jo ssh"

source $CFG

function discover_mailflow() {
    jo -p data=$( jo -a $(
      for ((i=0; i<$LAST_RELAY; i++))
      do
         jo {\#RELAY}=${RELAY[i]}
      done
      ) )
}

function send_mail() {
    mkdir -p $BUFFER; chmod 750 $BUFFER
    cd $BUFFER

    NOW=$(date +%s)
    ssh $MAILCLIENT "echo 'This message is intended for Zabbix.' | mail -s $NOW $EMAILADDR"
    echo $NOW >> sent.log
}

function process_mail() {
    cd $BUFFER || exit 1

    while IFS=- read timestamp index
    do
       [[ $index -le $LAST_RELAY ]] && MAILSTATS="${MAILSTATS}${RELAY[$index]}:$timestamp\n"
       [[ $index -eq $SUBJECT ]] && MAILID=$timestamp
    done <<< $(awk -v first_relay="$FIRST_RELAY" -v last_relay="$LAST_RELAY" -f /home/jp76350/git/zabbix-templates-jeff/zabbix-mailflow/zabbix_mailflow_getheader.awk /dev/stdin)

    echo -e $MAILSTATS > $MAILID
}

function getdata() {
   cd $BUFFER || exit 1

   MAILS=$(tail -n 2 $BUFFER/sent.log)

   for mail in $MAILS
   do
      for ((relay=$FIRST_RELAY; relay<$LAST_RELAY; relay++))
      do
         ${RELAY_SUM[relay]}=$(grep ${RELAY[relay]} $mail | cut -d: -f2)
      done
   done


#   MAILS=(*)
#   for ((i=$FIRST_RELAY; i<$LAST_RELAY; i++))
#   do
#      NUMBERS=($(grep -h ${RELAY[i]} "$LAST_MAILS" | cut -d: -f2))
#      SUM=0
#      for j in ${NUMBERS[@]}
#      do
#         SUM=$(($SUM + $j))
#      done
#      echo ${RELAY[i]}:$(($SUM / ${#NUMBERS[@]}))
#   done
}

function sanity_check() {
   ok=1
   for prog in $SOFTWARE
   do
      which $prog > /dev/null || { echo "Missing program $prog."; ok=0; }
   done
   test -f $CONFIG || { echo "Missing configfile $CONFIG"; ok=0; }
   test $ok -ne 1 && { echo "Sanity check failed. Aboring." ; exit 1; }
}

sanity_check

action=$1
arg=$2

case "$action" in
    getdata)
        getdata
        ;;
    mailflow.discover)
        discover_mailflow
        ;;
    mailflow.master)
        test -f $BUFFER/$arg && cat $BUFFER/$arg
        ;;
    process_mail)
        process_mail
        ;;
    send_mail)
        send_mail
        ;;
esac

